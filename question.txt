Challenge 100 problem solving. Here is the list

Arrays (20 questions)
1. Write a PHP function that takes an array of integers and returns the sum of all elements in the array.
2. Create a function that finds and returns both the maximum and minimum values from a given numeric array.
3. Without using PHP built-in functions, reverse the elements of an input array and return the reversed array.
4. Write a function to remove all duplicate elements from an array and return the unique elements.
5. Merge two arrays into one and remove any duplicate values in the merged array.
6. Implement a function that returns the intersection (common elements) of two arrays.
7. Check if a specific element exists in an array and return true or false.
8. Count the frequency of each value in an array and return an associative array with elements as keys and counts as values.
9. Sort an array in ascending order without using any built-in sort functions; implement a sorting algorithm manually.
10. Flatten a multidimensional array (nested arrays) into a one-dimensional array.
11. Find the second largest number in an array of integers.
12. Write a function to rotate the elements of an array to the right by a specified number of positions.
13. Split an array into smaller arrays (chunks) of a specified size and return an array of these chunks.
14. Given an array of consecutive integers with one missing number, find and return the missing number.
15. Remove all falsy values (false, 0, null, "", "0") from an array and return the cleaned array.
16. From an array, find all pairs of numbers whose sum equals a given target value.
17. Check if two arrays contain the exact same elements regardless of order.
18. Given an array of strings, reverse the characters in each string element individually.
19. Find the longest increasing subsequence within an array.
20. Implement a custom filter function that takes an array and a callback, returning a new array containing elements where the callback returns true.

Strings (20 detailed questions)
1. Write a function that counts and returns the number of vowels and consonants in a given string.

2. Check if a given string is a palindrome (reads the same forwards and backwards).

3. Reverse the order of words in a sentence, preserving the words themselves.

4. Find the first non-repeating character in a string and return it.

5. Remove all duplicate characters from a string, preserving the order of first occurrence.

6. Check if two strings are anagrams of each other (contain the same characters with the same frequency).

7. Convert a string to title case by capitalizing the first letter of each word.

8. Count the number of words in a string.

9. Replace all spaces in a string with a specified character like underscore (_).

10. Check if a string contains only numeric digits.

11. Generate and return all possible permutations of a given string.

12. Find the longest substring without repeating characters in a string.

13. Convert a string to camelCase format.

14. Validate whether a string is a valid email address format.

15. Extract and return all numeric characters from a string as a new string.

16. Reverse each word of a sentence independently without changing the word order.

17. Compress a string by replacing sequences of repeated characters with the character followed by its count (e.g., "aaabb" becomes "a3b2").

18. Remove all vowels from a string.

19 Count the occurrence of each character in a string and return the result as an associative array.

20. Check if a string is a valid URL.

Numbers & Math (20 detailed questions)
1. Create a function to determine if a number is prime.

2. Write a function that calculates the factorial of a given positive integer.

3. Generate an array containing the Fibonacci sequence up to a given number.

4. Find the greatest common divisor (GCD) of two integers using the Euclidean algorithm.

5. Calculate the least common multiple (LCM) of two integers.

6. Check if a number is an Armstrong number (the sum of its digits raised to the power of the number of digits equals the number).

7. Reverse the digits of an integer and return the reversed number.

8. Determine if a number is a perfect square.

9. Calculate the sum of the digits of a number.

10. Check if a number reads the same forward and backward (palindrome).

11. Convert a decimal number to its binary representation without using built-in conversion functions.

12. Convert a binary number (string or integer) back to decimal.

13. Write a function to calculate the power of a number raised to an exponent without using PHP’s pow() function.

14. Implement Newton’s method to calculate the square root of a non-negative number with a specified precision.

15. Calculate the sum of all prime numbers up to a given number n.

16. Determine whether a number is a perfect number (equal to the sum of its proper divisors).

17. Find the integer part (floor) of the logarithm base 2 of a number.

18. Calculate the factorial of a number using recursion.

19. Return all factors (divisors) of a given integer.

20. Find the difference between the sum of even digits and the sum of odd digits in a number.

Sorting and Searching (20 detailed questions)
1. Implement Bubble Sort to sort an array of numbers in ascending order.

2. Implement Selection Sort for an array without using built-in sort functions.

3. Implement Insertion Sort on an array and return the sorted array.

4. Implement Merge Sort to sort an array of integers.

5. Implement Quick Sort algorithm to sort a given array.

6. Implement linear search to find the index of an element in an unsorted array.

7. Using binary search, find the index of a target element in a sorted array.

8. Sort an array of strings alphabetically.

9. Find the kth smallest element in an unsorted array.

10. Find the kth largest element in an unsorted array.

11. Sort an associative array by its keys.

12. Sort an associative array by its values.

13. Write a function to check if an array is already sorted in ascending order.

14. Given a sorted array, find all duplicate elements.

15. Identify the majority element in an array (appears more than n/2 times).

16. Sort an array of integers based on the sum of their digits.

17. Implement Counting Sort for numbers in the range 0 to 100.

18. Search for an element in a rotated sorted array.

19. Sort an array using Heap Sort.

20. Find the median of two sorted arrays of equal size.

Algorithms & Logic (20 detailed questions)
1. Check if a string is a palindrome without using built-in reverse functions.

2. Print all prime numbers between two given numbers.

3. Generate all subsets (power set) of a given set represented as an array.

4. Convert a binary number string to a decimal number without using built-ins.

5. Calculate the power set of a string’s characters.

6. Check if one array is a rotation of another array.

7. Find if an array contains a subarray whose sum is zero.

8. Solve the Tower of Hanoi puzzle for n disks recursively and print steps.

9. Find the longest common prefix string among an array of strings.

10. Implement a simple calculator to perform addition, subtraction, multiplication, and division based on user input.

11. Check if a year is a leap year.

12. Remove all spaces from a string without using built-in replacement or trim functions.

13. Validate if a string has balanced parentheses (every opening has a matching closing).

14. Find all pairs in an array where the difference between the numbers equals a specified target.

15. Convert a Roman numeral string to its integer value.

16. Find the first unique number in an array that appears only once.

17. Implement the Sieve of Eratosthenes to list all primes up to a given number.

18. Count the number of set bits (1s) in the binary representation of an integer.

19. Reverse a linked list represented as a PHP array (simulate singly linked list pointers).

20. Detect if an array contains a cycle (using indexes to simulate pointers).